generator client {
  provider = "prisma-client-js"
  // engineType = "binary" // if using replit than use this to fix error
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Guild {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  guildId        String  @unique
  prefix         String? @default("!")
  quotes         Quote[]
  welcomeChannel String?
  musicChannel   String?
  botChannel     String?
  stay           Stay?
  dj             Dj?
}

model Quote {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  content String
  author  String
  quoter  String
  date    DateTime
  Guild   Guild?   @relation(fields: [guildId], references: [id])
  guildId String?  @db.ObjectId
}

model Stay {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  guildId String
  guild   Guild   @relation(fields: [guildId], references: [guildId])
  textId  String?
  voiceId String?

  @@unique([guildId])
}

model Dj {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  guildId String?
  guild   Guild?  @relation(fields: [guildId], references: [guildId])
  roles   Roles[]
  mode    Boolean @default(false)

  @@unique([guildId])
}

model Roles {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  guildId String
  Dj      Dj?    @relation(fields: [guildId], references: [guildId])
  roleId  String @unique

  @@unique([guildId])
}

model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  userId    String     @unique
  playlists Playlist[]
}

model Playlist {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  userId String
  user   User?    @relation(fields: [userId], references: [userId])
  name   String
  songs  String[]

  @@unique([userId, name])
}
